# @(#)Makefile.tc	4.1

# If you want something other than Eastern United States time used on your
# system, change the line below (after finding the zone you want in the
# time zone files, or adding it to a time zone file).
# Alternately, if you discover you've got the wrong time zone, you can just
#	zic -l rightzone

LOCALTIME=	US/Eastern

# Use an absolute path name for TZDIR unless you're just testing the software.
# Forward slashes, please!

TZDIR=		c:/etc/zoneinfo

# You may want to change this define if you're just testing the software.
# Backward slashes, please!

TZLIB=		c:\turboc\lib\z.lib

# If you don't want leap second correction done, change "leapseconds" to
# nul below.

LEAPSECONDS=	leapseconds

# If you want to use System V compatibility code, add
#	-DUSG_COMPAT
# to the end of the "CFLAGS=" line.
#
# If you want BSD compatibility code, add
#	-DBSD_COMPAT
# to the end of the "CFLAGS=" line.
#
# If you'd like to use Robert Elz's additions to the "struct tm" structure,
# add a
#	-DKRE_COMPAT
# to the end of the "CFLAGS=" line, and add the structure elements
#	long	tm_gmtoff;
#	char *	tm_zone;
# to the END of the "struct tm" structure defined in <time.h>.
#
# If you want code inspired by certain emerging standards, add
#	-DSTD_INSPIRED
# to the end of the "CFLAGS=" line.
#
# If you want Source Code Control System ID's left out of object modules, add
#	-DNOID
# to the end of the "CFLAGS=" line.
#
# If you'll never want to handle solar-time-based time zones, add
#	-DNOSOLAR
# to the end of the "CFLAGS=" line
# (and comment out the "SDATA=" line below).

CFLAGS=

################################################################################

# Need -mc so solar87 and solar88 can be handled.
# Need -A to get __STDC__ defined (and PC-specific nonsense dispensed with).

CC=		tcc -DTZDIR="$(TZDIR)" -mc -A

TZCSRCS=	zic.c localtime.c asctime.c \
		scheck.c ialloc.c emkdir.c getopt.c link.c
TZCOBJS=	zic.obj localtime.obj asctime.obj \
		scheck.obj ialloc.obj emkdir.obj getopt.obj link.obj
TZDSRCS=	zdump.c localtime.c asctime.c \
		ialloc.c getopt.c link.c
TZDOBJS=	zdump.obj localtime.obj asctime.obj \
		ialloc.obj getopt.obj link.obj
LIBSRCS=	localtime.c asctime.c ctime.c dysize.c timemk.c
LIBOBJS=	localtime.obj asctime.obj ctime.obj dysize.obj timemk.obj
YDATA=		africa antarctica asia australasia \
		europe northamerica southamerica pacificnew
NDATA=		systemv
SDATA=		solar87 solar88
DATA=		$(YDATA) $(NDATA) $(SDATA) leapseconds

all:		REDID_BINARIES zdump.exe $(TZLIB)

REDID_BINARIES:	zic.exe $(DATA)
		zic -d $(TZDIR) -L $(LEAPSECONDS) $(YDATA)
		zic -d $(TZDIR) -L $(LEAPSECONDS) $(SDATA)
		zic -d $(TZDIR) -L nul $(NDATA)
		zic -d $(TZDIR) -l $(LOCALTIME)
		copy Makefile $<
		touch $<

zdump.exe:	$(TZDOBJS)
		$(CC) $(CFLAGS) $(LFLAGS) $(TZDOBJS)

$(TZLIB):	z.lib
		copy z.lib $<

z.lib:		$(LIBOBJS)
		copy nul $<
		command /c for %i in ($(LIBOBJS)) do tlib $< +%i

zic.exe:	$(TZCOBJS)
		$(CC) $(CFLAGS) $(LFLAGS) $(TZCOBJS)

clean:
		command /c for %i in (obj exe lib bak) do \
			if exist *.%i del *.%i
		command /c if exist REDID_BINARIES do del REDID_BINARIES

.c.obj:
		$(CC) -c $(CFLAGS) $*

asctime.obj:	nonstd.h stdio.h time.h tzfile.h
ctime.obj:	nonstd.h time.h
dysize.obj:	tzfile.h
emkdir.obj:	nonstd.h stdlib.h
ialloc.obj:	nonstd.h stdlib.h
link.obj:	nonstd.h stdio.h
localtime.obj:	nonstd.h stdio.h stdlib.h time.h tzfile.h
scheck.obj:	nonstd.h stdio.h stdlib.h
timemk.obj:	nonstd.h time.h tzfile.h
zdump.obj:	nonstd.h stdio.h stdlib.h time.h tzfile.h
zic.obj:	nonstd.h stdio.h stdlib.h time.h tzfile.h
